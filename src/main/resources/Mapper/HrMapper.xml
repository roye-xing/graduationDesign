<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.roye.project.Dao.HrDao">
    <resultMap id="staffInDepartment" type="staff">
        <id column="id" property="id"></id>
        <result column="name" property="name"></result>
        <result column="sex" property="sex"></result>
        <result column="birth" property="birth"></result>
        <result column="salary" property="salary"></result>
        <result column="perks" property="perks"></result>
        <association property="departmentName" javaType="department">
            <result column="department" property="name"></result>
        </association>
    </resultMap>
    <resultMap id="findEvaluate" type="evaluate">
        <id column="id" property="id"></id>
        <result column="hr_evaluate" property="hrEvaluate"></result>
        <result column="hr_score" property="hrScore"></result>
        <association property="staffName" javaType="staff">
            <result column="name" property="name"></result>
        </association>
    </resultMap>
    <select id="findAllStaff" resultMap="staffInDepartment">
        SELECT s.id,s.`name`,s.sex,s.birth,d.`name` department,s.salary,s.perks FROM staff s LEFT JOIN department d ON s.department=d.`no`
    </select>

    <select id="findAllDepartment" resultType="Department">
        select * from department
    </select>

    <select id="findStaffByNo" resultMap="staffInDepartment">
        SELECT s.id,s.`name`,s.sex,s.birth,d.`name` department,s.salary,s.perks FROM staff s LEFT JOIN department d ON s.department=d.`no`
        <where>
            <if test="department==''">
                s.department is null
            </if>
            <if test="department!='all' and department !=''">
                s.department=#{department}
            </if>
        </where>
    </select>

    <select id="findEvaluate" resultMap="findEvaluate">
        SELECT e.id,s.`name` name,e.hr_evaluate,e.hr_score FROM evaluate e RIGHT JOIN staff s ON e.id=s.id LEFT JOIN users u ON s.id=u.username LEFT JOIN company c ON u.company_id=c.id
        <where>
            c.id=(SELECT company_id FROM users where username=#{id})
            <if test="type == 'id' and search != ''">
               AND e.id=#{search}
            </if>
            <if test="type == 'name' and search!=''">
              AND  `name` like concat('%',+#{search},'%')
            </if>
        </where>
    </select>

    <update id="updateEvaluate" parameterType="evaluate">
        update evaluate set hr_score=#{hrScore},hr_evaluate=#{hrEvaluate} where id=#{id}
    </update>

    <update id="updateStaff" parameterType="staff">
        update staff set department=#{department},salary=#{salary},perks=#{perks} where id=#{id}
    </update>

    <resultMap id="findAllTakeOff" type="takeoff">
        <id column="id" property="id"></id>
        <result column="type" property="type"></result>
        <result column="reason" property="reason"></result>
        <result column="reg_time" property="regTime"></result>
        <result column="back_time" property="backTime"></result>
        <result column="hr_check" property="hrCheck"></result>
        <result column="uuid" property="uuid"></result>
        <association property="name" javaType="staff">
            <result column="name" property="name"></result>
        </association>
    </resultMap>
    <select id="findAllTakeOff" resultMap="findAllTakeOff">
        select t.`id`,s.`name` name,t.type,t.reg_time,t.back_time,t.hr_check,t.reason,t.uuid from staff s,takeoff t where s.id=t.id
    </select>

    <update id="updateTakeOff">
        update takeoff set hr_check=#{check} where uuid=#{uuid}
    </update>

    <resultMap id="talentsInfo" type="staff">
        <id column="id" property="id"></id>
        <result column="name" property="name"></result>
        <result column="sex" property="sex"></result>
        <association property="user" javaType="user">
            <result column="phone" property="phone"></result>
            <result column="email" property="email"></result>
            <result column="secrecy" property="secrecy"></result>
        </association>
        <association property="evaluate" javaType="evaluate">
            <result column="old_works" property="oldWorks"></result>
            <result column="old_evaluate" property="oldEvaluate"></result>
            <result column="self_evaluate" property="selfEvaluate"></result>
        </association>
    </resultMap>
    <select id="getAllTalents" resultMap="talentsInfo">
        SELECT s.id,s.`name`,s.sex,IF(u.secrecy is true,CONCAT(LEFT(u.phone,3),'****',RIGHT(u.phone,4)),u.phone) AS 'phone',IF(u.secrecy is true,CONCAT(LEFT(u.email,3),'****',right(u.email,8)),u.email) AS 'email',u.secrecy,e.old_works,e.old_evaluate,e.self_evaluate
        from staff s LEFT JOIN evaluate e ON e.id=s.id LEFT JOIN users u ON u.username=s.id WHERE u.company_id is null
    </select>

    <insert id="sendRequest">
        insert into checkb
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id,requester,`type`,`time`,uuid,
            <if test="type=='录用'">
                accept2
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #{id},#{requester},#{type},#{sqlTime},#{uuid},
            <if test="type=='录用'">
                1
            </if>
        </trim>

    </insert>

    <select id="getAllRequest" resultType="request">
        select id,`time`,`type`,IF(type='联系方式',(select phone from users where username=checkb.id),'-') as phone,IF(type='联系方式',(select email from users where username=checkb.id),'-') as email,accept1,if(type='录用','申请录用','获取联系方式') as msg from checkb where requester=#{id}
    </select>
</mapper>